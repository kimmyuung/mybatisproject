<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<resultMap type="com.spring.board.vo.BoardVo" id="boardVo">
		<result property="codeName"		column="CODE_NAME"/>
    	<result property="codeId"		column="CODE_ID"/>
		<result property="boardType" column="BOARD_TYPE" />
		<result property="boardNum" column="BOARD_NUM" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardComment" column="BOARD_COMMENT" />
	</resultMap>

	<resultMap type="com.spring.board.vo.ComCodeVo"
		id="comCodeVo">
		<result property="codeType" column="CODE_TYPE" />
		<result property="codeId" column="CODE_ID" />
		<result property="codeName" column="CODE_NAME" />
	</resultMap>
	
	
	<resultMap type="com.spring.board.vo.MemberVo" id="memberVo">
		<result property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW" />
		<result property="userName" column="USER_NAME" />
		<result property="userPhone" column="USER_PHONE1" />
		<result property="userAddr" column="USER_ADDR1" />
		<result property="userCompany" column="USER_COMPANY" />
	</resultMap>

	 <resultMap type="com.spring.board.vo.BoardByListVo" id="boardByListVo">
        <collection property="boardlist" column="{no = no}" ofType="com.spring.board.vo.BoardVo" select="selectBoard" />    
    </resultMap>

	 <select id="selectBoard" resultType="com.spring.board.vo.BoardVo">
        SELECT 
		CODE_NAME
		,BOARD_TYPE
		,BOARD_NUM
		,BOARD_TITLE
		,BOARD_COMMENT
		,TOTAL_CNT
		,CODE_ID 
	FROM
		(
		SELECT
			CODE_NAME
			,BOARD_TYPE
			,BOARD_NUM
			,BOARD_TITLE
			,BOARD_COMMENT
			,ROW_NUMBER() OVER(ORDER BY BOARD_NUM DESC) AS NUMROW
			,COUNT(*) OVER() AS TOTAL_CNT
			,CODE_ID 
		FROM
			BOARD, COM_CODE
		WHERE CODE_ID = BOARD_TYPE -- CODE_ID칼럼의 값과 BOARD_TYPE칼럼의 값이 같을 때 
			<if test="codeId != null"> -- 사용자가 파라미터로 보낸 codeId가 null인지 아닌지 체크
				AND CODE_ID IN -- 하나의 칼럼에 두개 이상의 칼럼 정보를 불러오기 위해 in 사용
				<foreach collection="codeId" item="c" open="(" close=")" separator=",">
				-- codeId 배열을 c로 칭하고 구문 시작시 ( 삽입 , 구문 끝날 시 ) 삽입, 배열의 값을 ,로 나누기 위해 설정
					#{c} -- codeId배열의 값
				</foreach>
			</if>
		)
    </select>

	<select id="codeNameList"
		parameterType="com.spring.board.vo.ComCodeVo" resultMap="comCodeVo">
		SELECT
			CODE_NAME
			,CODE_ID 
		FROM
			COM_CODE
		WHERE
			CODE_TYPE='menu'
	</select>


	<select id="boardList" parameterType="com.spring.board.vo.PageVo" resultMap="boardVo">
	SELECT 
		CODE_NAME
		,BOARD_TYPE
		,BOARD_NUM
		,BOARD_TITLE
		,BOARD_COMMENT
		,TOTAL_CNT
		,CODE_ID 
	FROM
		(
		SELECT
			CODE_NAME
			,BOARD_TYPE
			,BOARD_NUM
			,BOARD_TITLE
			,BOARD_COMMENT
			,ROW_NUMBER() OVER(ORDER BY BOARD_NUM DESC) AS NUMROW
			,COUNT(*) OVER() AS TOTAL_CNT
			,CODE_ID 
		FROM
			BOARD, COM_CODE
		WHERE CODE_ID = BOARD_TYPE -- CODE_ID칼럼의 값과 BOARD_TYPE칼럼의 값이 같을 때 
			<if test="codeId != null"> -- 사용자가 파라미터로 보낸 codeId가 null인지 아닌지 체크
				AND CODE_ID IN -- 하나의 칼럼에 두개 이상의 칼럼 정보를 불러오기 위해 in 사용
				<foreach collection="codeId" item="c" open="(" close=")" separator=",">
				-- codeId 배열을 c로 칭하고 구문 시작시 ( 삽입 , 구문 끝날 시 ) 삽입, 배열의 값을 ,로 나누기 위해 설정
					#{c} -- codeId배열의 값
				</foreach>
			</if>
		)
		WHERE NUMROW BETWEEN (#{pageNo}-1)*10 + 1 AND (#{pageNo})*10
</select>

	<select id="boardTotal" parameterType="Integer"
		resultType="Integer">
		SELECT
			COUNT(*) AS TOTAL_CNT
		FROM
			BOARD
	</select>

	<select id="boardView"
		parameterType="com.spring.board.vo.BoardVo" resultMap="boardVo">
		SELECT
			BOARD_TYPE
			,BOARD_NUM
			,BOARD_TITLE
			,BOARD_COMMENT
		FROM
			BOARD
		WHERE
			BOARD_TYPE = #{boardType}
			AND BOARD_NUM = #{boardNum}
	</select>

	<select id="boardInsert"
		parameterType="com.spring.board.vo.BoardVo">
		INSERT INTO
		BOARD
			(BOARD_TYPE
			,BOARD_NUM
			,BOARD_TITLE
			,BOARD_COMMENT
			,CREATOR
			,CREATE_TIME
			,MODIFIER
			,MODIFIED_TIME
		)
		VALUES
			(#{boardType}
			,(SELECT NVL(TO_NUMBER(MAX(BOARD_NUM)+1), 1)
		FROM BOARD
			WHERE BOARD_TYPE = #{boardType})
			,#{boardTitle}
			,#{boardComment}
			,'system'
			,TO_CHAR(SYSDATE)
			,'system'
			,TO_CHAR(SYSDATE)
			)
	</select>
	<update  id="boardInsertbyList"
		 parameterType = "com.spring.board.vo.BoardByListVo">
		<foreach collection="boardlist" item="item" open="INSERT ALL" close="SELECT * FROM DUAL" 
        separator=" ">
		INTO BOARD
		(BOARD_TYPE
			,BOARD_NUM
			,BOARD_TITLE
			,BOARD_COMMENT
			,CREATOR
			,CREATE_TIME
			,MODIFIER
			,MODIFIED_TIME
		)
		VALUES 
		(
			#{item.boardType}
			,(SELECT NVL(TO_NUMBER(MAX(BOARD_NUM)+1), 1)
		FROM BOARD
			WHERE BOARD_TYPE = #{item.boardType})
			,#{item.boardTitle}
			,#{item.boardComment}
			,'system'
			,TO_CHAR(SYSDATE)
			,'system'
			,TO_CHAR(SYSDATE)
		)
		</foreach>
	</update >
	
	<update id="boardUpdate"
		parameterType="com.spring.board.vo.BoardVo">
		UPDATE BOARD
			SET BOARD_TITLE=#{boardTitle}
			,BOARD_COMMENT=#{boardComment}
		WHERE BOARD_TYPE = #{boardType}
		AND
			BOARD_NUM = #{boardNum}
	</update>

	<delete id="boardDelete"
		parameterType="com.spring.board.vo.BoardVo">
		DELETE FROM BOARD
		WHERE BOARD_TYPE = #{boardType}
		AND
		BOARD_NUM = #{boardNum}
	</delete>
</mapper>